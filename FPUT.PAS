PROGRAM FPUT;

LABEL EXIT;

CONST
  FTP_STAT=$E0;
  FTP_CMD=$E0;
  FTP_DATA=$E1;

  FTP_RESET=$00;
  FTP_FILENAME=$01;
  FTP_OPEN=$02;
  FTP_CREATE=$03;
  FTP_CLOSE=$04;

VAR
  CMDLINE: STRING[128] AT $80;
  FILENAME: STRING[128];
  BUFFER: STRING[128];
  F: FILE;
  N,BYTES: INTEGER;

FUNCTION ERROR: BOOLEAN;
VAR STATUS: BYTE;
BEGIN
  ERROR:=FALSE;
  STATUS:=PORT[FTP_STAT];
  IF STATUS<>0 THEN
  BEGIN
    WRITELN(FILENAME,': REMOTE ERROR ',STATUS);
    ERROR:=TRUE;
  END;  
END;

BEGIN
  WHILE CMDLINE[1]=' ' DO DELETE(CMDLINE,1,1);
  FILENAME:=CMDLINE;

  ASSIGN(F, FILENAME);
  {$I-} RESET(F);
  IF IORES>0 THEN
  BEGIN
    WRITELN(FILENAME,': ERROR ',IORES,' OPENING FILE');
    GOTO EXIT;
  END;
  {$I+}

  PORT[FTP_CMD]:=FTP_RESET;
  IF ERROR THEN GOTO EXIT;

  PORT[FTP_CMD]:=FTP_FILENAME;
  IF ERROR THEN GOTO EXIT;
  FOR N:=1 TO LEN(FILENAME) DO
  BEGIN
    PORT[FTP_DATA]:=ORD(FILENAME[N]);
  END;

  PORT[FTP_CMD]:=FTP_CREATE;
  IF ERROR THEN GOTO EXIT;

  BYTES:=0;
  WHILE NOT EOF(F) DO
  BEGIN
    BLOCKREAD(F,BUFFER,1);
    FOR N:=0 TO 127 DO
    BEGIN
      PORT[FTP_DATA]:=ORD(BUFFER[N]);
      IF ERROR THEN GOTO EXIT;
    END;
    BYTES:=BYTES+128;
  END;

  WRITELN(FILENAME,': ',BYTES,' BYTES SENT');
  CLOSE(F);

  PORT[FTP_CMD]:=FTP_CLOSE;
  IF ERROR THEN GOTO EXIT;

EXIT:
END.
