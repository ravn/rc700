PROGRAM FGET;

LABEL EXIT;

CONST
  FTP_STAT=$E0;
  FTP_CMD=$E0;
  FTP_DATA=$E1;

  FTP_RESET=$00;
  FTP_FILENAME=$01;
  FTP_OPEN=$02;
  FTP_CREATE=$03;
  FTP_CLOSE=$04;

VAR
  CMDLINE: STRING[128] AT $80;
  FILENAME: STRING[128];
  BUFFER: STRING[128];
  F: FILE;
  N,INDEX: INTEGER;
  BYTES: REAL;
  DATA,STAT: BYTE;
  DONE: BOOLEAN;

FUNCTION ERROR: BOOLEAN;
VAR STATUS: BYTE;
BEGIN
  ERROR:=FALSE;
  STATUS:=PORT[FTP_STAT];
  IF STATUS<>0 THEN
  BEGIN
    WRITELN(FILENAME,': REMOTE ERROR ',STATUS);;
    ERROR:=TRUE;
  END;
END;

BEGIN
  WHILE CMDLINE[1]=' ' DO DELETE(CMDLINE,1,1);
  FILENAME:=CMDLINE;

  PORT[FTP_CMD]:=FTP_RESET;
  IF ERROR THEN GOTO EXIT;

  PORT[FTP_CMD]:=FTP_FILENAME;
  IF ERROR THEN GOTO EXIT;
  FOR N:=1 TO LEN(FILENAME) DO
  BEGIN
    PORT[FTP_DATA]:=ORD(FILENAME[N]);
  END;

  PORT[FTP_CMD]:=FTP_OPEN;
  IF ERROR THEN GOTO EXIT;

  ASSIGN(F, FILENAME);
  {$I-} REWRITE(F);
  IF IORES>0 THEN
  BEGIN
    WRITELN(FILENAME,': ERROR ',IORES,' CREATING FILE');
    GOTO EXIT;
  END;
  {$I+}

  BYTES:=0;
  DONE:=FALSE;
  WHILE NOT DONE DO
  BEGIN
    INDEX:=0;
    FILL(BUFFER,128,$1A);
    WHILE NOT DONE AND (INDEX<128) DO
    BEGIN
      DATA:=PORT[FTP_DATA];
      IF DATA=$FF THEN
      BEGIN
        STAT:=PORT[FTP_STAT];
        IF STAT<>$00 THEN DONE:=TRUE;
      END;
      IF NOT DONE THEN
      BEGIN
        BUFFER[INDEX]:=CHR(DATA);
        INDEX:=INDEX+1;
        BYTES:=BYTES+1;
      END;
    END;

    IF INDEX>0 THEN BLOCKWRITE(F, BUFFER, 1);
  END;

  IF (STAT<>0) AND (STAT<>$FF) THEN
  BEGIN
    WRITELN(FILENAME,': ERROR ',STAT,' RECEIVING FILE');
  END;

  WRITELN(FILENAME,': ',BYTES:1:0,' BYTES RECEIVED');
  CLOSE(F);

  PORT[FTP_CMD]:=FTP_CLOSE;
  IF ERROR THEN GOTO EXIT;

EXIT:
END.
